{"version":3,"sources":["components/services/persons.js","components/App.js","index.js"],"names":["baseURL","getAll","a","axios","get","create","newInfo","post","remove","id","delete","update","newObject","put","Filter","newSearch","handleFilter","value","onChange","PersonForm","updateInfo","handleNameChange","newName","handleNumberChange","newNumber","onSubmit","type","name","Persons","infoToShow","removePerson","map","info","key","number","onClick","App","useState","persons","setPersons","setNewName","setNewNumber","setNewSearch","undefined","foundPerson","setFoundPerson","responseMessage","setResponseMessage","nameOfClass","setnameOfClass","useEffect","personService","then","response","data","makeFirstCharactersUppercase","entry","split","s","charAt","toUpperCase","substr","join","hideNotification","setTimeout","filter","person","toLowerCase","includes","replace","className","e","typed","target","found","findIndex","preventDefault","foundName","foundNumber","concat","catch","error","createNewEntry","window","confirm","updatedPerson","console","log","updatePhoneNumber","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c474fa6a.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseURL = 'api/persons';\r\n\r\nconst getAll = async () => {\r\n  return await axios.get(baseURL)\r\n\r\n};\r\n\r\nconst create = async (newInfo) => {\r\n  return await axios.post(baseURL, newInfo)\r\n};\r\n\r\nconst remove = async (id) => {\r\n  return await axios.delete(`${baseURL}/${id}`)\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  return await axios.put(`${baseURL}/${id}`, newObject)\r\n\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  remove,\r\n  update\r\n}","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\nimport '../index.css'\r\n\r\nconst Filter = ({ newSearch, handleFilter }) => {\r\n  return (\r\n    <form>\r\n    filter shown with\r\n    <input\r\n    value={newSearch}\r\n    onChange={handleFilter}/>\r\n  </form>\r\n  )\r\n};\r\n\r\nconst PersonForm = ({ updateInfo, handleNameChange, newName, handleNumberChange, newNumber }) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={updateInfo}>\r\n      name: <input\r\n        onChange={handleNameChange}\r\n        value={newName}/>\r\n      </form>\r\n      <form onSubmit={updateInfo}>\r\n      number: <input\r\n        onChange={handleNumberChange}\r\n        value={newNumber}\r\n        type=\"text\"\r\n        name=\"option\"/>\r\n\r\n      <button type=\"submit\">add</button>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst Persons = ({ infoToShow, removePerson }) => {\r\n  return (\r\n    <div>\r\n    {infoToShow.map((info) => {\r\n    \r\n      return <div key={info.id}>\r\n              <span>{info.name} {info.number} </span>\r\n              <button onClick={() => removePerson(info.id, info.name)} id={info.id}>delete</button>\r\n             </div>\r\n      })}\r\n</div>\r\n  )\r\n}\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]);\r\n  const [ newName, setNewName ] = useState('');\r\n  const [ newNumber, setNewNumber ] = useState('');\r\n  const [ newSearch, setNewSearch] = useState('')\r\n  const [ foundPerson, setFoundPerson ] = useState(undefined);\r\n  const [responseMessage, setResponseMessage] = useState('');\r\n  const [ nameOfClass, setnameOfClass] = useState('');\r\n\r\n\r\nuseEffect(() => {\r\n  personService\r\n  .getAll()\r\n  .then(response => {\r\n  setPersons(response.data)\r\n})\r\n}, []);\r\n\r\n\r\n\r\n  const handleNameChange = (e) => {\r\n    setNewName(e.target.value);\r\n    \r\n  };\r\n\r\n\r\n  const makeFirstCharactersUppercase = (entry) => {\r\n    return entry\r\n      .split(' ')\r\n      .map(s => s.charAt(0)\r\n      .toUpperCase() + s\r\n      .substr(1))\r\n      .join(' ')\r\n  };\r\n\r\n\r\n  const hideNotification = () => {\r\n    return setTimeout(() => {\r\n            setResponseMessage('')\r\n            setnameOfClass('')\r\n          }, 5000)\r\n  };\r\n\r\n\r\n  const updatePhoneNumber = (id, updatedPerson, person) => {\r\n    return personService\r\n    .update(id, updatedPerson)\r\n    .then(response => {\r\n      setPersons(persons.map(person => person.id === id ? response.data : person));\r\n\r\n\r\n    setnameOfClass('response')\r\n    setResponseMessage(`${person.name}'s number changed!`)\r\n    hideNotification();\r\n    setNewName('')\r\n    setNewNumber('')\r\n    })\r\n    .catch(error => {\r\n\r\n      console.log(error)\r\n      setnameOfClass('error')\r\n      setResponseMessage(`${person.name} has been deleted!`)\r\n      hideNotification();\r\n      \r\n    })\r\n  };\r\n\r\n\r\n  const createNewEntry = (newInfo) => {\r\n    return personService\r\n            .create(newInfo)\r\n            .then(response => {\r\n              setPersons(persons.concat(response.data))\r\n              setnameOfClass('response')\r\n              setResponseMessage(`${response.data.name} added`)\r\n              hideNotification();\r\n              setNewName('')\r\n              setNewNumber('')\r\n            })\r\n            .catch( error => {\r\n              setnameOfClass('error')\r\n              setResponseMessage(error.response.data.error)\r\n              hideNotification();\r\n              setNewName('')\r\n              setNewNumber('')\r\n            })\r\n  };\r\n\r\n\r\n  const updateInfo = (e) => {\r\n    e.preventDefault();\r\n\r\n    const foundName = persons.findIndex(person => person.name === makeFirstCharactersUppercase(newName));\r\n\r\n    const foundNumber = persons.findIndex(person => person.number === newNumber);\r\n\r\n    if( foundName === -1 && foundNumber === -1 && newNumber){\r\n\r\n      const newInfo = {\r\n        name: makeFirstCharactersUppercase(newName).replace(/ {2,}/g, ' '),\r\n        number: newNumber\r\n        };\r\n\r\n      createNewEntry(newInfo);\r\n\r\n\r\n    } else if (foundName > -1 && persons[foundName].number !== newNumber) {\r\n\r\n      if (window.confirm(newNumber && `${persons[foundName].name} is already added to phonebook, replace the old number with a new one?`)) {\r\n\r\n        const person = persons[foundName];\r\n        const id = persons[foundName].id;\r\n        const updatedPerson = {\r\n          ...person, number: newNumber\r\n        }\r\n\r\n        updatePhoneNumber(id, updatedPerson, person);\r\n\r\n      } else {\r\n        setNewName('')\r\n        setNewNumber('')\r\n      }\r\n      \r\n    } else if (newName && !newNumber ) {\r\n      alert('Add new number')\r\n      setNewName('')\r\n\r\n    } else if ( foundName && foundNumber ) {\r\n      alert(`${newName} is already added to phonebook`)\r\n      setNewName('')\r\n      setNewNumber('')\r\n    }; \r\n  };\r\n\r\n\r\n  const handleNumberChange = (e) => {\r\n    const typed = e.target.value;\r\n    setNewNumber(typed)\r\n  };\r\n\r\n\r\n  const handleFilter = (e) => {\r\n    const typed = e.target.value;\r\n    setNewSearch(typed)\r\n\r\n    const found = \r\n    persons.findIndex(person => person.name.toLowerCase().includes(newSearch.toLowerCase().replace(/ {2,}/g, ' ')));\r\n\r\n\r\n    const result = found !== -1;\r\n    setFoundPerson(result)\r\n\r\n  };\r\n\r\n  const infoToShow = foundPerson ? persons.filter(person => person.name.toLowerCase().includes(newSearch.toLowerCase().replace(/ {2,}/g, ' ')) ) : persons;\r\n\r\n\r\n\r\n  const removePerson = (id, name) => {\r\n    if (window.confirm(`Delete ${name}?`)) {\r\n      personService\r\n      .remove(id)\r\n      .then(response => {\r\n        setPersons(persons.filter(person => person.id !== id))\r\n      })\r\n    } else {\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div className={nameOfClass}>{responseMessage}</div>\r\n\r\n      <h1>Phonebook</h1>\r\n\r\n      <Filter newSearch={newSearch} handleFilter={handleFilter}/>\r\n\r\n      <h3>add a new</h3>\r\n\r\n      <PersonForm updateInfo={updateInfo} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} newName={newName} newNumber={newNumber}/>\r\n\r\n      <h3>Numbers</h3>\r\n\r\n      <Persons removePerson={removePerson} infoToShow={infoToShow} persons={persons}/>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}